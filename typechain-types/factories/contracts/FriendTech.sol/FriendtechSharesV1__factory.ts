/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FriendtechSharesV1,
  FriendtechSharesV1Interface,
} from "../../../contracts/FriendTech.sol/FriendtechSharesV1";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "trader",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "subject",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isBuy",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "shareAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "ethAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "protocolEthAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "subjectEthAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "supply",
        type: "uint256",
      },
    ],
    name: "Trade",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sharesSubject",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "buyShares",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sharesSubject",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getBuyPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sharesSubject",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getBuyPriceAfterFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "supply",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sharesSubject",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getSellPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sharesSubject",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "getSellPriceAfterFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFeeDestination",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sharesSubject",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "sellShares",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_feeDestination",
        type: "address",
      },
    ],
    name: "setFeeDestination",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feePercent",
        type: "uint256",
      },
    ],
    name: "setProtocolFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_feePercent",
        type: "uint256",
      },
    ],
    name: "setSubjectFeePercent",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "sharesBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "sharesSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "subjectFeePercent",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002161001c610026565b61002a565b61007a565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611061806100896000396000f3fe6080604052600436106101295760003560e01c8063715018a6116100a5578063b51d053411610074578063f2fde38b11610059578063f2fde38b146102e2578063f9931be014610302578063fbe532341461032257610129565b8063b51d0534146102ba578063d6e6eb9f146102cd57610129565b8063715018a6146102505780638da5cb5b146102655780639ae717811461027a578063a49834211461029a57610129565b80634635256e116100fc5780635a8a764e116100e15780635a8a764e146101fb5780635cf4ee911461021d5780636945b1231461023d57610129565b80634635256e146101b95780634ce7957c146101d957610129565b8063020235ff1461012e5780630f026f6d146101645780632267a89c1461018457806324dc441d146101a4575b600080fd5b34801561013a57600080fd5b5061014e610149366004610d0d565b610342565b60405161015b9190610fc7565b60405180910390f35b34801561017057600080fd5b5061014e61017f366004610d3f565b61035f565b34801561019057600080fd5b5061014e61019f366004610d3f565b6103d7565b3480156101b057600080fd5b5061014e610445565b3480156101c557600080fd5b5061014e6101d4366004610d3f565b61044b565b3480156101e557600080fd5b506101ee610475565b60405161015b9190610da4565b34801561020757600080fd5b5061021b610216366004610d68565b610484565b005b34801561022957600080fd5b5061014e610238366004610d80565b610491565b61021b61024b366004610d3f565b6105a8565b34801561025c57600080fd5b5061021b610840565b34801561027157600080fd5b506101ee610854565b34801561028657600080fd5b5061014e610295366004610d3f565b610863565b3480156102a657600080fd5b5061021b6102b5366004610d68565b610891565b61021b6102c8366004610d3f565b61089e565b3480156102d957600080fd5b5061014e610bae565b3480156102ee57600080fd5b5061021b6102fd366004610cf3565b610bb4565b34801561030e57600080fd5b5061014e61031d366004610cf3565b610bee565b34801561032e57600080fd5b5061021b61033d366004610cf3565b610c00565b600460209081526000928352604080842090915290825290205481565b60008061036c848461044b565b90506000670de0b6b3a7640000600254836103879190611008565b6103919190610fe8565b90506000670de0b6b3a7640000600354846103ac9190611008565b6103b69190610fe8565b9050806103c38385610fd0565b6103cd9190610fd0565b9695505050505050565b6000806103e48484610863565b90506000670de0b6b3a7640000600254836103ff9190611008565b6104099190610fe8565b90506000670de0b6b3a7640000600354846104249190611008565b61042e9190610fe8565b90508061043b8385611027565b6103cd9190611027565b60035481565b6001600160a01b03821660009081526005602052604081205461046e9083610491565b9392505050565b6001546001600160a01b031681565b61048c610c37565b600355565b60008083156104ec5760066104a7600186611027565b6104b2906002611008565b6104bd906001610fd0565b856104c9600182611027565b6104d39190611008565b6104dd9190611008565b6104e79190610fe8565b6104ef565b60005b90506000841580156105015750836001145b61057657600684610513600188611027565b61051d9190610fd0565b610528906002611008565b610533906001610fd0565b61053d8688610fd0565b8661054960018a611027565b6105539190610fd0565b61055d9190611008565b6105679190611008565b6105719190610fe8565b610579565b60005b905060006105878383611027565b9050613e8061059e82670de0b6b3a7640000611008565b6103cd9190610fe8565b6001600160a01b038216600090815260056020526040902054801515806105d757506001600160a01b03831633145b6105fc5760405162461bcd60e51b81526004016105f390610f35565b60405180910390fd5b60006106088284610491565b90506000670de0b6b3a7640000600254836106239190611008565b61062d9190610fe8565b90506000670de0b6b3a7640000600354846106489190611008565b6106529190610fe8565b90508061065f8385610fd0565b6106699190610fd0565b3410156106885760405162461bcd60e51b81526004016105f390610efe565b6001600160a01b03861660009081526004602090815260408083203384529091529020546106b7908690610fd0565b6001600160a01b03871660009081526004602090815260408083203384529091529020556106e58585610fd0565b6001600160a01b0387166000908152600560205260409020557f2c76e7a47fd53e2854856ac3f0a5f3ee40d15cfaa82266357ea9779c486ab9c33387600188878787610731848d610fd0565b604051610745989796959493929190610db8565b60405180910390a16001546040516000916001600160a01b031690849061076b90610da1565b60006040518083038185875af1925050503d80600081146107a8576040519150601f19603f3d011682016040523d82523d6000602084013e6107ad565b606091505b505090506000876001600160a01b0316836040516107ca90610da1565b60006040518083038185875af1925050503d8060008114610807576040519150601f19603f3d011682016040523d82523d6000602084013e61080c565b606091505b5050905081801561081a5750805b6108365760405162461bcd60e51b81526004016105f390610ec7565b5050505050505050565b610848610c37565b6108526000610c76565b565b6000546001600160a01b031690565b6001600160a01b03821660009081526005602052604081205461046e9061088b908490611027565b83610491565b610899610c37565b600255565b6001600160a01b0382166000908152600560205260409020548181116108d65760405162461bcd60e51b81526004016105f390610e90565b60006108eb6108e58484611027565b84610491565b90506000670de0b6b3a7640000600254836109069190611008565b6109109190610fe8565b90506000670de0b6b3a76400006003548461092b9190611008565b6109359190610fe8565b6001600160a01b038716600090815260046020908152604080832033845290915290205490915085111561097b5760405162461bcd60e51b81526004016105f390610dfc565b6001600160a01b03861660009081526004602090815260408083203384529091529020546109aa908690611027565b6001600160a01b03871660009081526004602090815260408083203384529091529020556109d88585611027565b6001600160a01b0387166000908152600560205260408120919091557f2c76e7a47fd53e2854856ac3f0a5f3ee40d15cfaa82266357ea9779c486ab9c3903390889088878787610a28848d611027565b604051610a3c989796959493929190610db8565b60405180910390a160003382610a528587611027565b610a5c9190611027565b604051610a6890610da1565b60006040518083038185875af1925050503d8060008114610aa5576040519150601f19603f3d011682016040523d82523d6000602084013e610aaa565b606091505b50506001546040519192506000916001600160a01b03909116908590610acf90610da1565b60006040518083038185875af1925050503d8060008114610b0c576040519150601f19603f3d011682016040523d82523d6000602084013e610b11565b606091505b505090506000886001600160a01b031684604051610b2e90610da1565b60006040518083038185875af1925050503d8060008114610b6b576040519150601f19603f3d011682016040523d82523d6000602084013e610b70565b606091505b50509050828015610b7e5750815b8015610b875750805b610ba35760405162461bcd60e51b81526004016105f390610ec7565b505050505050505050565b60025481565b610bbc610c37565b6001600160a01b038116610be25760405162461bcd60e51b81526004016105f390610e33565b610beb81610c76565b50565b60056020526000908152604090205481565b610c08610c37565b6001805473ffffffffffffffffffffffffffffffffffffffff19166001600160a01b0392909216919091179055565b610c3f610cd3565b6001600160a01b0316610c50610854565b6001600160a01b0316146108525760405162461bcd60e51b81526004016105f390610f92565b600080546001600160a01b0383811673ffffffffffffffffffffffffffffffffffffffff19831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b3390565b80356001600160a01b0381168114610cee57600080fd5b919050565b600060208284031215610d04578081fd5b61046e82610cd7565b60008060408385031215610d1f578081fd5b610d2883610cd7565b9150610d3660208401610cd7565b90509250929050565b60008060408385031215610d51578182fd5b610d5a83610cd7565b946020939093013593505050565b600060208284031215610d79578081fd5b5035919050565b60008060408385031215610d92578182fd5b50508035926020909101359150565b90565b6001600160a01b0391909116815260200190565b6001600160a01b03988916815296909716602087015293151560408601526060850192909252608084015260a083015260c082015260e08101919091526101000190565b60208082526013908201527f496e73756666696369656e742073686172657300000000000000000000000000604082015260600190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201527f6464726573730000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601a908201527f43616e6e6f742073656c6c20746865206c617374207368617265000000000000604082015260600190565b60208082526014908201527f556e61626c6520746f2073656e642066756e6473000000000000000000000000604082015260600190565b60208082526014908201527f496e73756666696369656e74207061796d656e74000000000000000000000000604082015260600190565b60208082526030908201527f4f6e6c79207468652073686172657327207375626a6563742063616e2062757960408201527f2074686520666972737420736861726500000000000000000000000000000000606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b90815260200190565b60008219821115610fe357610fe361103e565b500190565b60008261100357634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156110225761102261103e565b500290565b6000828210156110395761103961103e565b500390565b634e487b7160e01b600052601160045260246000fdfea164736f6c6343000801000a";

type FriendtechSharesV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FriendtechSharesV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FriendtechSharesV1__factory extends ContractFactory {
  constructor(...args: FriendtechSharesV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FriendtechSharesV1> {
    return super.deploy(overrides || {}) as Promise<FriendtechSharesV1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): FriendtechSharesV1 {
    return super.attach(address) as FriendtechSharesV1;
  }
  override connect(signer: Signer): FriendtechSharesV1__factory {
    return super.connect(signer) as FriendtechSharesV1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FriendtechSharesV1Interface {
    return new utils.Interface(_abi) as FriendtechSharesV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FriendtechSharesV1 {
    return new Contract(address, _abi, signerOrProvider) as FriendtechSharesV1;
  }
}
