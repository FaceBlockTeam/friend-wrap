/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC1155,
  ERC1155Interface,
} from "../../../../../@openzeppelin/contracts/token/ERC1155/ERC1155";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "uri_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        indexed: false,
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "TransferBatch",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "TransferSingle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "value",
        type: "string",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "URI",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "accounts",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
    ],
    name: "balanceOfBatch",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "amounts",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeBatchTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "uri",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620017ce380380620017ce833981016040819052620000349162000105565b6200003f8162000046565b506200022e565b80516200005b9060029060208401906200005f565b5050565b8280546200006d90620001db565b90600052602060002090601f016020900481019282620000915760008555620000dc565b82601f10620000ac57805160ff1916838001178555620000dc565b82800160010185558215620000dc579182015b82811115620000dc578251825591602001919060010190620000bf565b50620000ea929150620000ee565b5090565b5b80821115620000ea5760008155600101620000ef565b6000602080838503121562000118578182fd5b82516001600160401b03808211156200012f578384fd5b818501915085601f83011262000143578384fd5b81518181111562000158576200015862000218565b604051601f8201601f19908116603f0116810190838211818310171562000183576200018362000218565b8160405282815288868487010111156200019b578687fd5b8693505b82841015620001be57848401860151818501870152928501926200019f565b82841115620001cf57868684830101525b98975050505050505050565b600281046001821680620001f057607f821691505b602082108114156200021257634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b611590806200023e6000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461015057610087565b8062fdd58e1461008c57806301ffc9a7146100b55780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610d4f565b610163565b6040516100ac91906113bf565b60405180910390f35b6100c86100c3366004610e41565b6101ba565b6040516100ac9190610fff565b6100e86100e3366004610e80565b610202565b6040516100ac919061100a565b610108610103366004610c0c565b610296565b005b61011d610118366004610d78565b6102f4565b6040516100ac9190610fbe565b610108610138366004610d15565b610414565b6100c861014b366004610bda565b61042a565b61010861015e366004610cb2565b610458565b60006001600160a01b0383166101945760405162461bcd60e51b815260040161018b906110d7565b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b14806101eb57506001600160e01b031982166303a24d0760e21b145b806101fa57506101fa826104af565b90505b919050565b60606002805461021190611412565b80601f016020809104026020016040519081016040528092919081815260200182805461023d90611412565b801561028a5780601f1061025f5761010080835404028352916020019161028a565b820191906000526020600020905b81548152906001019060200180831161026d57829003601f168201915b50505050509050919050565b61029e6104c8565b6001600160a01b0316856001600160a01b031614806102c457506102c48561014b6104c8565b6102e05760405162461bcd60e51b815260040161018b906111ee565b6102ed85858585856104cd565b5050505050565b606081518351146103175760405162461bcd60e51b815260040161018b90611305565b6000835167ffffffffffffffff81111561034157634e487b7160e01b600052604160045260246000fd5b60405190808252806020026020018201604052801561036a578160200160208202803683370190505b50905060005b845181101561040c576103d185828151811061039c57634e487b7160e01b600052603260045260246000fd5b60200260200101518583815181106103c457634e487b7160e01b600052603260045260246000fd5b6020026020010151610163565b8282815181106103f157634e487b7160e01b600052603260045260246000fd5b60209081029190910101526104058161147a565b9050610370565b509392505050565b61042661041f6104c8565b838361069e565b5050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6104606104c8565b6001600160a01b0316856001600160a01b0316148061048657506104868561014b6104c8565b6104a25760405162461bcd60e51b815260040161018b90611134565b6102ed8585858585610741565b6001600160e01b031981166301ffc9a760e01b14919050565b335b90565b81518351146104ee5760405162461bcd60e51b815260040161018b90611362565b6001600160a01b0384166105145760405162461bcd60e51b815260040161018b90611191565b600061051e6104c8565b905061052e818787878787610696565b60005b845181101561063057600085828151811061055c57634e487b7160e01b600052603260045260246000fd5b60200260200101519050600085838151811061058857634e487b7160e01b600052603260045260246000fd5b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156105d85760405162461bcd60e51b815260040161018b9061124b565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906106159084906113fa565b92505081905550505050806106299061147a565b9050610531565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610680929190610fd1565b60405180910390a4610696818787878787610884565b505050505050565b816001600160a01b0316836001600160a01b031614156106d05760405162461bcd60e51b815260040161018b906112a8565b6001600160a01b0383811660008181526001602090815260408083209487168084529490915290819020805460ff1916851515179055517f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3190610734908590610fff565b60405180910390a3505050565b6001600160a01b0384166107675760405162461bcd60e51b815260040161018b90611191565b60006107716104c8565b9050610791818787610782886109a9565b61078b886109a9565b87610696565b6000848152602081815260408083206001600160a01b038a168452909152902054838110156107d25760405162461bcd60e51b815260040161018b9061124b565b6000858152602081815260408083206001600160a01b038b811685529252808320878503905590881682528120805486929061080f9084906113fa565b92505081905550856001600160a01b0316876001600160a01b0316836001600160a01b03167fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f6288886040516108659291906113c8565b60405180910390a461087b828888888888610a02565b50505050505050565b610896846001600160a01b0316610ad3565b156106965760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906108cf9089908990889088908890600401610f1d565b602060405180830381600087803b1580156108e957600080fd5b505af1925050508015610919575060408051601f3d908101601f1916820190925261091691810190610e64565b60015b610979576109256114c1565b806308c379a0141561095f575061093a6114d8565b806109455750610961565b8060405162461bcd60e51b815260040161018b919061100a565b505b60405162461bcd60e51b815260040161018b9061101d565b6001600160e01b0319811663bc197c8160e01b1461087b5760405162461bcd60e51b815260040161018b9061107a565b604080516001808252818301909252606091600091906020808301908036833701905050905082816000815181106109f157634e487b7160e01b600052603260045260246000fd5b602090810291909101015292915050565b610a14846001600160a01b0316610ad3565b156106965760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610a4d9089908990889088908890600401610f7b565b602060405180830381600087803b158015610a6757600080fd5b505af1925050508015610a97575060408051601f3d908101601f19168201909252610a9491810190610e64565b60015b610aa3576109256114c1565b6001600160e01b0319811663f23a6e6160e01b1461087b5760405162461bcd60e51b815260040161018b9061107a565b6001600160a01b03163b151590565b80356001600160a01b03811681146101fd57600080fd5b600082601f830112610b09578081fd5b81356020610b16826113d6565b604051610b23828261144d565b838152828101915085830183850287018401881015610b40578586fd5b855b85811015610b5e57813584529284019290840190600101610b42565b5090979650505050505050565b600082601f830112610b7b578081fd5b813567ffffffffffffffff811115610b9557610b956114ab565b604051610bac601f8301601f19166020018261144d565b818152846020838601011115610bc0578283fd5b816020850160208301379081016020019190915292915050565b60008060408385031215610bec578182fd5b610bf583610ae2565b9150610c0360208401610ae2565b90509250929050565b600080600080600060a08688031215610c23578081fd5b610c2c86610ae2565b9450610c3a60208701610ae2565b9350604086013567ffffffffffffffff80821115610c56578283fd5b610c6289838a01610af9565b94506060880135915080821115610c77578283fd5b610c8389838a01610af9565b93506080880135915080821115610c98578283fd5b50610ca588828901610b6b565b9150509295509295909350565b600080600080600060a08688031215610cc9578081fd5b610cd286610ae2565b9450610ce060208701610ae2565b93506040860135925060608601359150608086013567ffffffffffffffff811115610d09578182fd5b610ca588828901610b6b565b60008060408385031215610d27578182fd5b610d3083610ae2565b915060208301358015158114610d44578182fd5b809150509250929050565b60008060408385031215610d61578182fd5b610d6a83610ae2565b946020939093013593505050565b60008060408385031215610d8a578182fd5b823567ffffffffffffffff80821115610da1578384fd5b818501915085601f830112610db4578384fd5b81356020610dc1826113d6565b604051610dce828261144d565b8381528281019150858301838502870184018b1015610deb578889fd5b8896505b84871015610e1457610e0081610ae2565b835260019690960195918301918301610def565b5096505086013592505080821115610e2a578283fd5b50610e3785828601610af9565b9150509250929050565b600060208284031215610e52578081fd5b8135610e5d8161156a565b9392505050565b600060208284031215610e75578081fd5b8151610e5d8161156a565b600060208284031215610e91578081fd5b5035919050565b6000815180845260208085019450808401835b83811015610ec757815187529582019590820190600101610eab565b509495945050505050565b60008151808452815b81811015610ef757602081850181015186830182015201610edb565b81811115610f085782602083870101525b50601f01601f19169290920160200192915050565b60006001600160a01b03808816835280871660208401525060a06040830152610f4960a0830186610e98565b8281036060840152610f5b8186610e98565b90508281036080840152610f6f8185610ed2565b98975050505050505050565b60006001600160a01b03808816835280871660208401525084604083015283606083015260a06080830152610fb360a0830184610ed2565b979650505050505050565b600060208252610e5d6020830184610e98565b600060408252610fe46040830185610e98565b8281036020840152610ff68185610e98565b95945050505050565b901515815260200190565b600060208252610e5d6020830184610ed2565b60208082526034908201527f455243313135353a207472616e7366657220746f206e6f6e204552433131353560408201527f526563656976657220696d706c656d656e746572000000000000000000000000606082015260800190565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a6563746560408201527f6420746f6b656e73000000000000000000000000000000000000000000000000606082015260800190565b6020808252602b908201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60408201527f65726f2061646472657373000000000000000000000000000000000000000000606082015260800190565b60208082526029908201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260408201527f20617070726f7665640000000000000000000000000000000000000000000000606082015260800190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f20616460408201527f6472657373000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526032908201527f455243313135353a207472616e736665722063616c6c6572206973206e6f742060408201527f6f776e6572206e6f7220617070726f7665640000000000000000000000000000606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201527f72207472616e7366657200000000000000000000000000000000000000000000606082015260800190565b60208082526029908201527f455243313135353a2073657474696e6720617070726f76616c2073746174757360408201527f20666f722073656c660000000000000000000000000000000000000000000000606082015260800190565b60208082526029908201527f455243313135353a206163636f756e747320616e6420696473206c656e67746860408201527f206d69736d617463680000000000000000000000000000000000000000000000606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e6774682060408201527f6d69736d61746368000000000000000000000000000000000000000000000000606082015260800190565b90815260200190565b918252602082015260400190565b600067ffffffffffffffff8211156113f0576113f06114ab565b5060209081020190565b6000821982111561140d5761140d611495565b500190565b60028104600182168061142657607f821691505b6020821081141561144757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8201601f1916810167ffffffffffffffff81118282101715611473576114736114ab565b6040525050565b600060001982141561148e5761148e611495565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b600060033d11156104ca57600481823e5160e01c90565b600060443d10156114e8576104ca565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561151a5750505050506104ca565b8285019150815181811115611534575050505050506104ca565b843d8701016020828501011115611550575050505050506104ca565b61155f6020828601018761144d565b509094505050505090565b6001600160e01b03198116811461158057600080fd5b5056fea164736f6c6343000801000a";

type ERC1155ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC1155ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC1155__factory extends ContractFactory {
  constructor(...args: ERC1155ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    uri_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC1155> {
    return super.deploy(uri_, overrides || {}) as Promise<ERC1155>;
  }
  override getDeployTransaction(
    uri_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(uri_, overrides || {});
  }
  override attach(address: string): ERC1155 {
    return super.attach(address) as ERC1155;
  }
  override connect(signer: Signer): ERC1155__factory {
    return super.connect(signer) as ERC1155__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC1155Interface {
    return new utils.Interface(_abi) as ERC1155Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155 {
    return new Contract(address, _abi, signerOrProvider) as ERC1155;
  }
}
